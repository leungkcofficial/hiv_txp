library(jsonlite)
df <- fromJSON("D:/PYDataScience/HIV_TXP_SR/data/supp.json")
print(dim(df))
print(colnames(df))

# Creating a copy of the relevant columns
survival_data <- df[, c("1-year_patient_survival_(%)_hiv+", "3-year_patient_survival_(%)_hiv+", ">=_5-year_patient_survival_(%)_hiv+")]

# Replacing "None" with NA and ensuring the data is numeric
survival_data[survival_data == "None"] <- NA
survival_data <- data.frame(lapply(survival_data, as.numeric))

# Impute missing values using MICE
library(mice)
imputed_data <- mice(survival_data, m=5, method='pmm', seed=123)

# Selecting one of the imputed datasets (e.g., the first one)
completed_data <- complete(imputed_data, 1)

# Use the imputed '>=_5-year_patient_survival_(%)_hiv+' as effect size
effect_size <- completed_data[, 1]

if (!require(meta)) install.packages("meta")
library(meta)

effect_size <- effect_size / 100

# Adjust effect sizes slightly to avoid 0% and 100%
effect_size <- pmin(pmax(effect_size, 1 / (2 * sample_size)), 1 - 1 / (2 * sample_size))

# Apply logit transformation
logit_effect_size <- log(effect_size / (1 - effect_size))

# Calculate standard error after logit transformation
se_logit <- sqrt(1 / (sample_size * effect_size) + 1 / (sample_size * (1 - effect_size)))

# Determine appropriate y-axis limits
y_max <- min(se_logit, na.rm = TRUE)
y_min <- max(se_logit, na.rm = TRUE)

# Create the funnel plot with specified y-axis limits
funnel(logit_effect_size, se_logit, ylim = c(y_min, y_max))
