library(jsonlite)
df <- fromJSON("D:/PYDataScience/HIV_TXP_SR/data/supp.json")

# Select and rename columns
pt_survival_df <- df[c('sample_size_(hiv_seropositive_only)', 'study_id', 
                       "1-year_cumulative_graft_rejection_(%)_hiv+",
                       "3-year_cumulative_graft_rejection_(%)_hiv+",
                       ">=_5-year_cumulative_graft_rejection_(%)_hiv+")]
names(pt_survival_df) <- c('sample_size', 'study_id', '1_yr', '3_yr', '5_yr')

# Function to convert logit to proportion
logit_to_proportion <- function(logit) {
  exp(logit) / (1 + exp(logit))
}

library(metafor)
library(ggplot2)
library(dplyr)

# Drop NA and convert percentages to proportions
valid_indices <- which(!is.na(pt_survival_df$'1_yr'))
proportions <- pt_survival_df$'1_yr'[valid_indices] / 100
sample_sizes <- pt_survival_df$sample_size[valid_indices]
valid_study_ids <- pt_survival_df$study_id[valid_indices]
  
# Avoid proportions of 0 and 1 by adding a small constant
epsilon <- 0.5 / min(sample_sizes)
proportions <- pmax(epsilon, pmin(1 - epsilon, proportions))
  
# Logit Transformation
logit_effect_size <- log(proportions / (1 - proportions))
  
# Calculate variances for the logit-transformed effect sizes
var_logit <- 1 / (sample_sizes * proportions) + 1 / (sample_sizes * (1 - proportions))
  
# Meta-analysis using the DerSimonian and Laird random effects model
meta_analysis_result <- rma(yi = logit_effect_size, vi = var_logit, method = "DL")

print(meta_analysis_result)

# Calculate the standard errors for each study
se_logit <- sqrt(var_logit)
# Calculate the z-value for the desired confidence level (e.g., 95% CI)
z_value <- qnorm(0.975)  # For a 95% CI

# Calculate the confidence intervals on the logit scale
ci_lb_logit <- logit_effect_size - z_value * se_logit
ci_ub_logit <- logit_effect_size + z_value * se_logit

# Back-transform the confidence intervals from logit to proportion
ci_lb_proportion <- logit_to_proportion(ci_lb_logit)
ci_ub_proportion <- logit_to_proportion(ci_ub_logit)
effect_size_proportion <- logit_to_proportion(meta_analysis_result$yi)

# Combine the results into a data frame
study_results <- data.frame(
  study_id = valid_study_ids,
  sample_size = sample_sizes,
  effect_size = effect_size_proportion,
  ci_lb = ci_lb_proportion,
  ci_ub = ci_ub_proportion
)
study_results$weight <- weights(meta_analysis_result)
study_results$weight <- (study_results$weight / sum(study_results$weight)) * 100
study_results$weight_percent <- sprintf("%.2f%%", study_results$weight)

# Retrieve the pooled estimate from the meta-analysis result
pooled_logit_effect_size <- meta_analysis_result$b

# Retrieve the confidence interval for the pooled estimate
pooled_ci_lb_logit <- meta_analysis_result$ci.lb
pooled_ci_ub_logit <- meta_analysis_result$ci.ub

# Back-transform the pooled estimate and confidence interval from logit to proportion
pooled_effect_size_proportion <- logit_to_proportion(pooled_logit_effect_size)
pooled_ci_lb_proportion <- logit_to_proportion(pooled_ci_lb_logit)
pooled_ci_ub_proportion <- logit_to_proportion(pooled_ci_ub_logit)

# Now create a separate data frame just for the pooled estimate
pooled_results <- data.frame(
  study_id = "Pooled Estimate",
  sample_size = sum(study_results$sample_size),
  effect_size = pooled_effect_size_proportion,
  ci_lb = pooled_ci_lb_proportion,
  ci_ub = pooled_ci_ub_proportion,
  weight = sum(study_results$weight)
)
pooled_results$weight_percent <- sprintf("%.2f%%", sum(study_results$weight))
# Combine the individual study results with the pooled estimate
all_results <- rbind(study_results, pooled_results)
# Convert the 'study_id' to a factor and specify the level order to ensure
# the pooled estimate is at the end (the bottom when plotted)
all_results$study_id <- factor(all_results$study_id, levels = c(as.character(study_results$study_id), "Pooled Estimate"))
# Add a column for the formatted CI string
all_results$ci_text <- paste0("[", round(all_results$ci_lb, 2), ", ", round(all_results$ci_ub, 2), "]")

# Add I2 and p-value from meta_analysis_result to the plot as annotations
I2 <- meta_analysis_result$I2
tau2 <- meta_analysis_result$tau2
p_value <- meta_analysis_result$QEp

library(ggplot2)

forest_plot <- ggplot(all_results, aes(y = study_id, x = effect_size, xmin = ci_lb, xmax = ci_ub)) +
  geom_point(data = all_results %>% filter(study_id != "Pooled Estimate"), size = 2) +
  geom_errorbarh(data = all_results %>% filter(study_id != "Pooled Estimate"), height = 0.2) +
  geom_text(aes(label = weight_percent, x = 1.01), hjust = 0, size = 3) +
  geom_text(aes(label = sprintf("%.2f", effect_size), x = 1.05), hjust = 0, size = 3) +
  geom_text(aes(label = ci_text, x = 1.08), hjust = 0, size = 3) +
  # Add annotation labels at the top of the plot
  annotate("text", x = 1.01, y = length(all_results$study_id) + 0.5, label = "Weight", hjust = 0, vjust = 0.5, size = 3.5, fontface = "bold") +
  annotate("text", x = 1.05, y = length(all_results$study_id) + 0.5, label = "Effect", hjust = 0, size = 3.5, fontface = "bold") +
  annotate("text", x = 1.08, y = length(all_results$study_id) + 0.5, label = "95% CI", hjust = 0, size = 3.5, fontface = "bold") +
  # Add tau2, I2 and p-value at the bottom right of the plot
  annotate("text", x = 0.1, y = 3, label = paste0("I² = ", sprintf("%.2f%%", I2)), hjust = 1, size = 3.5, fontface = "bold") +
  annotate("text", x = 0.1, y = 2, label = paste0("tau² = ", sprintf("%.2f%%", tau2)), hjust = 1, size = 3.5, fontface = "bold") +
  annotate("text", x = 0.1, y = 1, label = paste0("p-value = ", sprintf("%.2g", p_value)), hjust = 1, size = 3.5, fontface = "bold") +
  geom_point(data = all_results %>% filter(study_id == "Pooled Estimate"), size = 10, shape = 5, color = "blue") +
  geom_vline(xintercept = pooled_effect_size_proportion, linetype = "dotted", color = "blue") +
  scale_y_discrete(limits = rev(levels(all_results$study_id))) +  # Order y axis based on factor levels
  # Adjust the x-axis breaks to only show 0-1 scale
  scale_x_continuous(breaks = seq(0, 1, by = 0.1), limits = c(0, max(study_results$ci_ub, 1) + 0.2)) +
  theme(
    axis.text.y = element_text(size = rel(0.8)),
    axis.title = element_text(size = rel(1.25)),
    plot.title = element_text(hjust = 0.5),  # Center the title
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.background = element_blank(),
    axis.ticks.y = element_blank(),
    axis.ticks.x = element_line(color = "black"),
    plot.margin = margin(0.5, 0.5, 0.5, 0.5, "cm")
  ) +
  ggtitle("Meta-Analysis Forest Plot") +
  labs(x = "Effect Size (Proportion)", y = "Study") +
  theme(axis.text.y = element_text(size = rel(0.8)),
        axis.title = element_text(size = rel(1.25)))


# Print the plot
print(forest_plot)

ggsave("1_year_forest_plot.png", results$plot, width = 10, height = 6, units = "in")

